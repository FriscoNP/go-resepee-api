// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	entity "go-resepee-api/entity"

	mock "github.com/stretchr/testify/mock"
)

// ReviewRepositoryInterface is an autogenerated mock type for the ReviewRepositoryInterface type
type ReviewRepositoryInterface struct {
	mock.Mock
}

// FindByRecipeID provides a mock function with given fields: recipeID
func (_m *ReviewRepositoryInterface) FindByRecipeID(recipeID int) ([]entity.Review, int, error) {
	ret := _m.Called(recipeID)

	var r0 []entity.Review
	if rf, ok := ret.Get(0).(func(int) []entity.Review); ok {
		r0 = rf(recipeID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]entity.Review)
		}
	}

	var r1 int
	if rf, ok := ret.Get(1).(func(int) int); ok {
		r1 = rf(recipeID)
	} else {
		r1 = ret.Get(1).(int)
	}

	var r2 error
	if rf, ok := ret.Get(2).(func(int) error); ok {
		r2 = rf(recipeID)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// Store provides a mock function with given fields: review
func (_m *ReviewRepositoryInterface) Store(review *entity.Review) error {
	ret := _m.Called(review)

	var r0 error
	if rf, ok := ret.Get(0).(func(*entity.Review) error); ok {
		r0 = rf(review)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
