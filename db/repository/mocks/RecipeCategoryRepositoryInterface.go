// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	entity "go-resepee-api/entity"

	mock "github.com/stretchr/testify/mock"
)

// RecipeCategoryRepositoryInterface is an autogenerated mock type for the RecipeCategoryRepositoryInterface type
type RecipeCategoryRepositoryInterface struct {
	mock.Mock
}

// GetAll provides a mock function with given fields:
func (_m *RecipeCategoryRepositoryInterface) GetAll() ([]entity.RecipeCategory, error) {
	ret := _m.Called()

	var r0 []entity.RecipeCategory
	if rf, ok := ret.Get(0).(func() []entity.RecipeCategory); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]entity.RecipeCategory)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Store provides a mock function with given fields: category
func (_m *RecipeCategoryRepositoryInterface) Store(category *entity.RecipeCategory) (entity.RecipeCategory, error) {
	ret := _m.Called(category)

	var r0 entity.RecipeCategory
	if rf, ok := ret.Get(0).(func(*entity.RecipeCategory) entity.RecipeCategory); ok {
		r0 = rf(category)
	} else {
		r0 = ret.Get(0).(entity.RecipeCategory)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*entity.RecipeCategory) error); ok {
		r1 = rf(category)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
